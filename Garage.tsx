/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/Parking Garage.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube002: THREE.Mesh
    Cube001: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube007_1: THREE.Mesh
    Cube007_2: THREE.Mesh
    Cube001_1: THREE.Mesh
    Cube001_2: THREE.Mesh
    Cube008: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cube011: THREE.Mesh
    Cube012: THREE.Mesh
    Cube013: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.010']: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Parking Garage.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={materials.Material} rotation={[-Math.PI, 0, -Math.PI]} scale={[-100, -0.25, -100]} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.001']} position={[-45, 53.82, -45]} rotation={[-Math.PI, 0, 0]} scale={[4.68, 1.319, 4.68]} />
      <mesh geometry={nodes.Cube001.geometry} material={materials['Material.001']} position={[45, 53.82, -45]} rotation={[-Math.PI, 0, 0]} scale={[4.68, 1.319, 4.68]} />
      <mesh geometry={nodes.Cube003.geometry} material={materials['Material.001']} position={[45, 53.82, 45]} rotation={[-Math.PI, 0, 0]} scale={[4.68, 1.319, 4.68]} />
      <mesh geometry={nodes.Cube004.geometry} material={materials['Material.001']} position={[-45, 53.82, 45]} rotation={[-Math.PI, 0, 0]} scale={[4.68, 1.319, 4.68]} />
      <mesh geometry={nodes.Cube005.geometry} material={materials['Material.001']} position={[0, 55.423, 0]} rotation={[-Math.PI, 0, -Math.PI]} scale={[-100, -0.25, -100]} />
      <group position={[75, 55.003, -75]} rotation={[-Math.PI, 0, 0]} scale={[6.911, 0.812, 1.904]}>
        <mesh geometry={nodes.Cube007_1.geometry} material={materials['Material.010']} />
        <mesh geometry={nodes.Cube007_2.geometry} material={materials['Material.009']} />
      </group>
      <group position={[75, 55.003, -75]} rotation={[-Math.PI, 0, 0]} scale={[6.911, 0.812, 1.904]}>
        <mesh geometry={nodes.Cube001_1.geometry} material={materials['Material.002']} />
        <mesh geometry={nodes.Cube001_2.geometry} material={materials['Material.003']} />
      </group>
      <mesh geometry={nodes.Cube008.geometry} material={materials['Material.004']} position={[0, 55.423, 0]} rotation={[-Math.PI, 0, -Math.PI]} scale={[-100, -0.25, -100]} />
      <mesh geometry={nodes.Cube009.geometry} material={materials['Material.004']} position={[-45, 53.82, 45]} rotation={[-Math.PI, 0, 0]} scale={[4.68, 1.319, 4.68]} />
      <mesh geometry={nodes.Cube010.geometry} material={materials['Material.004']} position={[45, 53.82, 45]} rotation={[-Math.PI, 0, 0]} scale={[4.68, 1.319, 4.68]} />
      <mesh geometry={nodes.Cube011.geometry} material={materials['Material.004']} position={[-45, 53.82, -45]} rotation={[-Math.PI, 0, 0]} scale={[4.68, 1.319, 4.68]} />
      <mesh geometry={nodes.Cube012.geometry} material={materials['Material.004']} position={[45, 53.82, -45]} rotation={[-Math.PI, 0, 0]} scale={[4.68, 1.319, 4.68]} />
      <mesh geometry={nodes.Cube013.geometry} material={materials['Material.005']} rotation={[-Math.PI, 0, -Math.PI]} scale={[-100, -0.25, -100]} />
    </group>
  )
}

useGLTF.preload('/Parking Garage.glb')
